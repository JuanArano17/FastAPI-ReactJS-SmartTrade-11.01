"""initial schema

Revision ID: 3a6bc11fb4ea
Revises:
Create Date: 2024-03-21 13:41:54.704877

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "3a6bc11fb4ea"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "Buyer",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("surname", sa.String(length=255), nullable=False),
        sa.Column("eco_points", sa.Float(), nullable=False),
        sa.Column("password", sa.String(length=255), nullable=False),
        sa.Column("dni", sa.String(length=255), nullable=False),
        sa.Column("billing_address", sa.String(length=255), nullable=True),
        sa.Column("payment_method", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("dni"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "Card",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("card_number", sa.String(), nullable=False),
        sa.Column("card_name", sa.String(), nullable=False),
        sa.Column("card_security_num", sa.Integer(), nullable=False),
        sa.Column("card_exp_date", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Category",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "Seller",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("surname", sa.String(length=255), nullable=False),
        sa.Column("password", sa.String(length=255), nullable=False),
        sa.Column("cif", sa.String(length=255), nullable=False),
        sa.Column("bank_data", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("cif"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "Address",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("id_buyer", sa.Integer(), nullable=False),
        sa.Column("street", sa.String(), nullable=False),
        sa.Column("floor", sa.Integer(), nullable=True),
        sa.Column("door", sa.String(), nullable=False),
        sa.Column("adit_info", sa.String(), nullable=True),
        sa.Column("city", sa.String(), nullable=False),
        sa.Column("postal_code", sa.String(), nullable=False),
        sa.Column("country", sa.String(), nullable=False),
        sa.Column("default", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_buyer"],
            ["Buyer.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "BuyerOwnsCard",
        sa.Column("id_card", sa.Integer(), nullable=False),
        sa.Column("id_buyer", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_buyer"],
            ["Buyer.id"],
        ),
        sa.ForeignKeyConstraint(
            ["id_card"],
            ["Card.id"],
        ),
        sa.PrimaryKeyConstraint("id_card", "id_buyer"),
    )
    op.create_table(
        "Product",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("id_category", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.Column("eco_points", sa.Float(), nullable=False),
        sa.Column("spec_sheet", sa.String(length=255), nullable=False),
        sa.Column("stock", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_category"],
            ["Category.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Image",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("id_product", sa.Integer(), nullable=False),
        sa.Column("url", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["id_product"],
            ["Product.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Order",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("id_buyer", sa.Integer(), nullable=True),
        sa.Column("id_card", sa.Integer(), nullable=True),
        sa.Column("id_address", sa.Integer(), nullable=True),
        sa.Column("order_date", sa.DateTime(), nullable=False),
        sa.Column("total", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_address"],
            ["Address.id"],
        ),
        sa.ForeignKeyConstraint(
            ["id_buyer"],
            ["Buyer.id"],
        ),
        sa.ForeignKeyConstraint(
            ["id_card"],
            ["Card.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "SellerProduct",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("id_product", sa.Integer(), nullable=True),
        sa.Column("id_seller", sa.Integer(), nullable=True),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column("price", sa.Float(), nullable=False),
        sa.Column("shipping_costs", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_product"],
            ["Product.id"],
        ),
        sa.ForeignKeyConstraint(
            ["id_seller"],
            ["Seller.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "InShoppingCart",
        sa.Column("id_seller_product", sa.Integer(), nullable=False),
        sa.Column("id_buyer", sa.Integer(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["id_buyer"],
            ["Buyer.id"],
        ),
        sa.ForeignKeyConstraint(
            ["id_seller_product"],
            ["SellerProduct.id"],
        ),
        sa.PrimaryKeyConstraint("id_seller_product", "id_buyer"),
    )
    op.create_table(
        "InWishList",
        sa.Column("id_seller_product", sa.Integer(), nullable=False),
        sa.Column("id_buyer", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_buyer"],
            ["Buyer.id"],
        ),
        sa.ForeignKeyConstraint(
            ["id_seller_product"],
            ["SellerProduct.id"],
        ),
        sa.PrimaryKeyConstraint("id_seller_product", "id_buyer"),
    )
    op.create_table(
        "ProductLine",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("id_order", sa.Integer(), nullable=True),
        sa.Column("id_seller_product", sa.Integer(), nullable=True),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column("subtotal", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_order"],
            ["Order.id"],
        ),
        sa.ForeignKeyConstraint(
            ["id_seller_product"],
            ["SellerProduct.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "RefundProduct",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("id_product_line", sa.Integer(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column("refund_date", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id_product_line"],
            ["ProductLine.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("RefundProduct")
    op.drop_table("ProductLine")
    op.drop_table("InWishList")
    op.drop_table("InShoppingCart")
    op.drop_table("SellerProduct")
    op.drop_table("Order")
    op.drop_table("Image")
    op.drop_table("Product")
    op.drop_table("BuyerOwnsCard")
    op.drop_table("Address")
    op.drop_table("Seller")
    op.drop_table("Category")
    op.drop_table("Card")
    op.drop_table("Buyer")
    # ### end Alembic commands ###
